/*
 * This file is part of the Civitas software distribution.
 * Copyright (c) 2007-2008, Civitas project group, Cornell University.
 * See the LICENSE file accompanying this distribution for further license
 * and copyright information.
 */ 
package civitas.common;

import java.io.*;

/**
 * This class is the super class of all final tally states. A final tally state is 
 * very similar to a tally state, not it is not mutable.  
 */
public abstract class TallyStateFinal implements XMLSerializable {        
    public abstract void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb) where {this} <= lbl;
    public final static String{*<-*} OPENING_TAG = "tallyState";
    
    public void toXML{}(PrintWriter[{}]{} sb) {
        toXML(new label {}, sb);
    }
    public static TallyStateFinal{*lbl} fromXML{*lbl}(label{*lbl} lbl, Reader[lbl]{*lbl} r)  throws (IllegalArgumentException{*lbl}, IOException{*lbl}) {
        TallyStateFinal b = null;
        Util.swallowTag(lbl, r, OPENING_TAG);
        String kind = Util.unescapeString(Util.readSimpleTag(lbl, r, "kind"));
        if (kind == null) {
            throw new IOException("Unspecified kind");
        }
        else if (kind.equalsIgnoreCase(ApprovalBallotDesign.KIND)) {
            b = ApprovalTallyStateFinal.fromXML(lbl, r);
        }
        else if (kind.equalsIgnoreCase(SingleChoiceBallotDesign.KIND)) {
            b = SingleChoiceTallyStateFinal.fromXML(lbl, r);
        }
        else if (kind.equalsIgnoreCase(CondorcetBallotDesign.KIND)) {
            b = CondorcetTallyStateFinal.fromXML(lbl, r);
        }
        else if (kind.equalsIgnoreCase(MultiBallotDesign.KIND)) {
            b = MultiTallyStateFinal.fromXML(lbl, r);
        }
        else 
            throw new IOException("Unknown ballot kind: " + kind);
        Util.swallowEndTag(lbl, r, OPENING_TAG);
        return b;
    }
}