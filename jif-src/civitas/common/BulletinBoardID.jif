/*
 * This file is part of the Civitas software distribution.
 * Copyright (c) 2007-2008, Civitas project group, Cornell University.
 * See the LICENSE file accompanying this distribution for further license
 * and copyright information.
 */ 
package civitas.common;

import java.io.*;

/**
 * This class encapsulates the identiy of a bulletin board:
 * the host, port, and a bulletin board id.
 */
public class BulletinBoardID implements XMLSerializable {
    public final String{this} host;
    public final int{this} port;
    public final String{this} id;

    public BulletinBoardID(String{this} host, int{this} port, String{this} id) {
        this.host = host;
        this.port = port;
        this.id = id;
    }
    
    public String{this} toString() {
        return this.host+":"+this.port+":"+this.id;
    }
    public boolean equals(BulletinBoardID that) {
        return that != null && this.port == that.port &&
               (this.host == that.host || (this.host != null && this.host.equals(that.host))) &&
               (this.id == that.id || (this.id != null && this.id.equals(that.id)));
    }
    
    private static final String{*<-*} TAG = "bulletinBoardID";
    protected String{this} tag() {
        return TAG;
    }
//    public String{this} toBulletinBoardXML() {
//        return toXMLImpl(TAG);
//    }
//    public String{this} toXML() {
//        return toXMLImpl(tag());
//    }
//    private String{this;t} toXMLImpl(String t) {
//        String s = "<" + t + ">";
//
//        s += "<host>";
//        s += this.host;
//        s += "</host>";
//        s += "<port>";
//        s += this.port;
//        s += "</port>";
//        s += "<id>";
//        s += this.id;
//        s += "</id>";
//        
//        s += "</" + t + ">";
//                
//        return s;
//    }
    public void toXML{}(PrintWriter[{}]{} sb) {
        toXML(new label {}, sb);
    }
    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb)  {
        toXMLImpl(tag(), lbl, sb);
    }
    public void toBulletinBoardXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb)  {
        toXMLImpl(TAG, lbl, sb);
    }
    private void toXMLImpl{*lbl}(String{*lbl} t, label lbl, PrintWriter[lbl]{*lbl} sb)  {
        if (sb == null) return;
        sb.print("<" + t + ">");

        sb.print("<host>");
        Util.escapeString(this.host, lbl, sb);
        sb.print("</host>");
        sb.print("<port>");
        sb.print(this.port);
        sb.print("</port>");
        sb.print("<id>");
        Util.escapeString(this.id, lbl, sb);
        sb.print("</id>");
        
        sb.print("</" + t + ">");
    }
    
    public static BulletinBoardID{*lbl} bbIDFromXML{*lbl}(label{*lbl} lbl, Reader[lbl]{*lbl} r) throws (IllegalArgumentException{*lbl}, IOException{*lbl}) {
        Util.swallowTag(lbl, r, TAG);
        String host = Util.unescapeString(Util.readSimpleTag(lbl, r, "host"));
        int port = Util.readSimpleIntTag(lbl, r, "port");
        String id = Util.unescapeString(Util.readSimpleTag(lbl, r, "id"));
        Util.swallowEndTag(lbl, r, TAG);
        return new BulletinBoardID(host, port, id);
    }    
}