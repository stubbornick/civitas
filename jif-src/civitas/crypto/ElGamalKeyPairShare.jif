/*
 * This file is part of the Civitas software distribution.
 * Copyright (c) 2007-2008, Civitas project group, Cornell University.
 * See the LICENSE file accompanying this distribution for further license
 * and copyright information.
 */
package civitas.crypto;

import civitas.common.*;

import java.math.BigInteger;
import java.io.*;

public class ElGamalKeyPairShare {
    public final ElGamalParameters{this} params;
    public final ElGamalPublicKey{this} pubKey;
    public final ElGamalPrivateKey{this} privKey;

    public ElGamalKeyPairShare(ElGamalParameters{this} params,
                                ElGamalPublicKey{this} pubKey,
                                ElGamalPrivateKey{this} privKey) {
        this.params = params;
        this.pubKey = pubKey;
        this.privKey = privKey;
    }

    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb) where {this} <= lbl {
        if (sb == null) return;
        sb.print("<elGamalKeyPairShare>");

        if (this.pubKey != null) {
            this.pubKey.toXML(lbl, sb);
        }
        if (this.privKey != null) {
            this.privKey.toXML(lbl, sb);
        }

        sb.print("</elGamalKeyPairShare>");
    }

    public static ElGamalKeyPairShare fromXML{*lbl}(label{*lbl} lbl, Reader[lbl]{*lbl} r) throws (IllegalArgumentException{*lbl}, IOException{*lbl}) {
        try {
            Util.swallowTag(lbl, r, "elGamalKeyPairShare");
            ElGamalPublicKey pubKey = CryptoUtil.factory().elGamalPublicKeyFromXML(lbl, r);
            ElGamalPrivateKey privKey = CryptoUtil.factory().elGamalPrivateKeyFromXML(lbl, r);
            Util.swallowEndTag(lbl, r, "elGamalKeyPairShare");

            ElGamalParameters params = pubKey==null?null:pubKey.getParams();
            return new ElGamalKeyPairShare(params, pubKey, privKey);
        }
        catch (NullPointerException e) { throw new IllegalArgumentException(); }
    }

}
